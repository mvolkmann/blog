Bun (https://bun.sh) is a fast JavaScript all-in-one toolkit.
It includes a JavaScript runtime, package manager, bundler, and test runner.
All of this is free and open source.

Bun can be used as a drop-in replacement for npm and Node.js.
The Bun runtime supports nearly all Node.js built-in modules.

Bun works with nearly all major web frameworks including
Next.js, SvelteKit, Astro, Nuxt, and Fastify.

Development of Bun started in 2022 by Jarred Sumner with VC funding.
Bun became stable (1.0) in September 2023.

Bun is built on JavaScriptCore (JSC) from Safari
rather than V8 which is used by Chrome.
JSC has faster startup time and lower memory usage than V8,
but slightly less overall performance.

Bun is implemented in Zig and some C++.
Zig is a free, open source, high performance, systems programming language
that provides a modern alternative to C.

The benefits of using Bun over npm and Node.js include:

- Bun provides significantly better performance.
- Bun simplifies the current state of JS/TS tooling
  (transpilers, bundlers, testing tools, and so on).
  There is less to install and configure and it is easier to use.
- Bun supports both CommonJS (`require`) and ESM (`import`)
  in the same source files.
- Bun supports TypeScript out of the box.
- Bun supports JSX/TSX files for generating HTML using React.
- Bun has built-in support for SQLite databases using the `bun:sqlite` module.
  Future support for MySQL and Postgres is planned.
- Bun has built-in support for Jest-compatible unit tests.
- Bun has better support for Web APIs including
  `fetch`, `Request`, `Response`, `ReadableStream`, `WebSocket`, and more.
  There is no need to install dependencies such as `node-fetch` and `ws`.
- Bun provides native hot reloading using the `--hot` flag
  which updates a running server without restarting it.
  This allows preserving application state
  and connections such as HTTP and WebSockets.
- Bun provides bun-specific APIs that are alternatives to many npm modules.
  These are highly optimized and perform much better than their Node.js equivalents.

The Bun team makes the following performance claims:

- Bun is 4 times faster than Node.js for a "hello world" program.
- The time to build and run TS code in Bun is 4 times faster than esbuild,
  15 times faster than TSX, and 43 times faster than TSC + Node.
- `bun install` is 29 times faster than npm and 17 times faster than pnpm.
- `bun run` is 5 times faster than `npm run`.
- `bun test` is 8 times faster than Vitest and 13 times faster than Jest.

For more detail, see Mark Volkmann's blog page on Bun at
https://mvolkmann.github.io/blog.